{"version":3,"file":"hooks.cjs.development.js","sources":["../src/utils/array.ts","../src/useSelection/useSelection.tsx"],"sourcesContent":["// TODO:\n// We need to test whether it's a good idea to store these values\n// in plain arrays and loop over so many times when adding or removing.\n// A better option might be using \"Map\" or an object which allows for\n// easy access and removal.\n// The test should also include check if the render method is okay with\n// using Object.key(obj).map(...) in case of using objects.\n// For the time being, we don't care since we never really store more than\n// 20-30 (max) of these selections at onces.\n\n// Comment:\n// This is used for combining two arrays of elements of the same\n// type into an array without duplicates. This function is\n// used when we need to keep a reference to a selection of items\n// mostly found in \"context\".\n// The reason for accepting a \"filter\" function is so we can\n// compare the values without any set rules. We want to compare\n// campaigns as well as kpis which have different comparison functions.\nexport function union<T>(\n  source: T[],\n  items: T[],\n  filter?: (a: T, b: T) => boolean\n): T[] {\n  const filterFn =\n    typeof filter === 'function' ? filter : (a: any, b: any) => a === b;\n\n  return items.reduce(\n    (prev, next) => {\n      if (!prev.some(p => filterFn(p, next))) {\n        prev.push(next);\n      }\n      return prev;\n    },\n    [...source]\n  );\n}\n\n// Comment:\n// This is used for creating a difference array of elements of the same\n// type into an array without duplicates. This function is similar to\n// \"union\" helper. In this case, we are removing an item from\n// the reference array which is usually stored in \"context\" for alter\n// use. The reason for accepting \"filter\" function is so we can\n// compare the values without any set rules. We want to compare\n// campaigns as well as kpis which have different comparison functions.\nexport function difference<T>(\n  source: T[],\n  items: T[],\n  filter?: (a: T, b: T) => boolean\n): T[] {\n  const filterFn =\n    typeof filter === 'function' ? filter : (a: any, b: any) => a === b;\n  return source.filter(s => !items.some(i => filterFn(s, i)));\n}\n\n// Comment:\n// To make sure we always have array of items\nexport function toArr<T>(items: T | T[]): T[] {\n  return !Array.isArray(items) ? [items] : [...items];\n}\n\n// Comment:\n// Little helper to check if an array is empty\nexport function emptyArr(arr: any[]) {\n  return arr.length === 0;\n}\n","// @flow\n/* eslint-disable no-use-before-define */\nimport React from 'react';\nimport { toArr, difference, union } from '../utils/array';\n\nexport type CompareFn<T> = (a: T, b: T) => boolean;\n\nexport type Options<T> = {\n  initialSelected?: T[];\n  compareFn?: CompareFn<T>;\n};\n\nexport type State<T> = {\n  selected: T[];\n  initialSelected: T[];\n  compareFn: CompareFn<T>;\n};\n\nconst MSG = {\n  ADD: 'ADD',\n  REMOVE: 'REMOVE',\n  RESET: 'RESET',\n} as const;\n\n// TODO: figure out how to use it without hardcoded values\n// it does not want to take the vales from the MSG above.\ntype Message<T> =\n  | { type: 'ADD'; payload: T[] }\n  | { type: 'REMOVE'; payload: T[] }\n  | { type: 'RESET'; payload: T[] };\n\nfunction defaultCompareFn(source: any, check: any) {\n  if (typeof source === 'string' && typeof check === 'string') {\n    return source === check;\n  } else if (typeof check === 'object' && typeof check === 'object') {\n    return source.id === check.id;\n  }\n  throw new Error('useSElection: wrong compareFn builder');\n}\n\nfunction reducer<T>(state: State<T>, msg: Message<T>) {\n  switch (msg.type) {\n    case MSG.ADD: {\n      return {\n        ...state,\n        selected: union<T>(state.selected, msg.payload, state.compareFn),\n      };\n    }\n    case MSG.REMOVE: {\n      return {\n        ...state,\n        selected: difference<T>(state.selected, msg.payload, state.compareFn),\n      };\n    }\n    case MSG.RESET: {\n      return {\n        ...state,\n        selected: state.initialSelected,\n      };\n    }\n    default: {\n      // TODO: change this into a function which is reused and stripped\n      // from the code in compile process. The same happens in other places\n      if (process.env.NODE_ENV !== 'production') {\n        // @ts-ignore\n        throw new Error(`useSelection: Unsupported action type: ${msg.type}`);\n      }\n      return state;\n    }\n  }\n}\n\n// TODO: change initial data if it changes in a React.useEffect();\nfunction useSelection<T>({\n  initialSelected = [],\n  compareFn = defaultCompareFn,\n}: Options<T> = {}) {\n  const [state, dispatch] = React.useReducer<\n    React.Reducer<State<T>, Message<T>>\n  >(reducer, {\n    selected: initialSelected,\n    initialSelected: initialSelected,\n    compareFn,\n  });\n\n  const add = React.useCallback(\n    (adding: T | T[]) => dispatch({ type: MSG.ADD, payload: toArr<T>(adding) }),\n    [dispatch]\n  );\n\n  const remove = React.useCallback(\n    (removing: T | T[]) =>\n      dispatch({ type: MSG.REMOVE, payload: toArr<T>(removing) }),\n    [dispatch]\n  );\n\n  const reset = React.useCallback(\n    () => dispatch({ type: MSG.RESET, payload: initialSelected }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [dispatch]\n  );\n\n  const touched = state.initialSelected.length !== state.selected.length;\n\n  return {\n    ...state,\n    add,\n    remove,\n    reset,\n    touched,\n  };\n}\n\nexport { useSelection };\n"],"names":["union","source","items","filter","filterFn","a","b","reduce","prev","next","some","p","push","difference","s","i","toArr","Array","isArray","MSG","ADD","REMOVE","RESET","defaultCompareFn","check","id","Error","reducer","state","msg","type","selected","payload","compareFn","initialSelected","useSelection","React","useReducer","dispatch","add","useCallback","adding","remove","removing","reset","touched","length"],"mappings":"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"}